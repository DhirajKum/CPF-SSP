<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:security="http://www.springframework.org/schema/security"
xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
	
	<context:component-scan base-package="com.techm.fci.cpf" />
	<http pattern ="/resources/**" security ="none"/>
	<beans:bean id="passwordEncoder" class ="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<http>
		
		<!-- <intercept-url pattern="/getEmpDetailsByEmpNum" access="denyAll" /> -->
		
		<intercept-url pattern="/role/roleMapping" access="hasRole('SUPER_USER')" />
		<intercept-url pattern="/role/viewRevokeRole" access="hasRole('SUPER_USER')" />
		<intercept-url pattern="/claim/myPendingReq" access="hasRole('CPF_ADMIN')" />
		
		<intercept-url pattern="/claim/getMaxPermAmount" access="hasAnyRole('USER','ADMIN','CPF_ADMIN')" />
		
		<intercept-url pattern="/claim/actClaimReq" access="hasAnyRole('ADMIN','CPF_ADMIN')" />
		<intercept-url pattern="/claim/approvedReq" access="hasAnyRole('ADMIN','CPF_ADMIN')" />
		<intercept-url pattern="/claim/completedReq" access="hasAnyRole('ADMIN','CPF_ADMIN')" />
		<intercept-url pattern="/claim/assignClaimRequest" access="hasAnyRole('ADMIN','CPF_ADMIN')" />
		
		<intercept-url pattern="/claim/claimHistoryTrail" access="hasAnyRole('USER','ADMIN','CPF_ADMIN')" />
		<intercept-url pattern="/claim/viewClaimReq" access="hasAnyRole('USER','ADMIN','CPF_ADMIN')" />
		
		<intercept-url pattern="/claim/downloadCpfDoc" access="hasAnyRole('SUPER_USER','USER','ADMIN','CPF_ADMIN')" />
		
		<intercept-url pattern="/report/claimReport" access="hasAnyRole('SUPER_USER','ADMIN','CPF_ADMIN')" />		
		
		<intercept-url pattern="/report/cpfSlip" access="permitAll" />
		<intercept-url pattern="/claim/raiseClaimReq" access="permitAll" />
	 	<intercept-url pattern="/claim/saveClaimRequest" access="permitAll" />
	 	<intercept-url pattern="/claim/pendingReq" access="permitAll" />
	 	<intercept-url pattern="/userRegistration" access="permitAll" />
		<intercept-url pattern="/saveRegistrationData" access="permitAll" />
		<intercept-url pattern="/changePasswordSubmit" access="permitAll" />
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/**" access="permitAll" />
		
		<form-login login-page="/login" 
			login-processing-url="/j_spring_security_check"
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password"
			default-target-url="/home"/>
		<access-denied-handler error-page="/accessDenied" />
		<logout logout-success-url="/login?logout" />
		
		<!-- enable csrf protection -->
		<csrf/>
		<headers>
			<!-- <content-security-policy policy-directives="script-src 'self' https://javascripts.example.com; report-uri /csp-report-endpoint/"></content-security-policy> -->
			<xss-protection disabled="false"/>
		</headers>
<!-- 
		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<custom-filter position="FORM_LOGIN_FILTER" ref="myAuthFilter" />
		<session-management session-authentication-strategy-ref="sas"/> -->
		
	</http>

	<!-- <beans:bean id="concurrencyFilter"
	class="org.springframework.security.web.session.ConcurrentSessionFilter">
	<beans:property name="sessionRegistry" ref="sessionRegistry" />
	<beans:property name="expiredUrl" value="/session-expired.htm" />
	</beans:bean>
	
	<beans:bean id="myAuthFilter" class=
	"org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
	<beans:property name="sessionAuthenticationStrategy" ref="sas" />
	<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
	
	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
	<beans:constructor-arg>
		<beans:list>
		<beans:bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
			<beans:constructor-arg ref="sessionRegistry"/>
			<beans:property name="maximumSessions" value="1" />
			<beans:property name="exceptionIfMaximumExceeded" value="true" />
		</beans:bean>
		<beans:bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
		</beans:bean>
		<beans:bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
			<beans:constructor-arg ref="sessionRegistry"/>
		</beans:bean>
		</beans:list>
	</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" /> -->



	<beans:bean id="cpfUserDetailsService" class="com.techm.fci.cpf.service.CPFUserDetailsService"/>
	<authentication-manager>
		<authentication-provider user-service-ref="cpfUserDetailsService" >
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>